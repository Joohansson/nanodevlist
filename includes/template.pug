- const siteTitle = 'Nano Donation Portal'
- const siteDescription = 'Support Nano developers for building the future of digital money'
- const siteKeywords = 'Nano,Contributors,Donations,Funding,Sponsor'
- const repoUrl = 'https://github.com/Joohansson/nanodevlist'
- const editUrl = `${repoUrl}/edit/master/donatees`
- const nanoUrl = 'https://nano.org'
- const projectUrl = 'https://nanolinks.info'
- const shuffle = arr => { for (let i = arr.length - 1; i > 0; i--) { const j = Math.floor(Math.random() * i); const temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; }; return arr }

block vars

- const pageTitle = title ? `${title} Â· ${siteTitle}` : siteTitle
- const pageDescription = description || siteDescription
- const pageKeywords = keywords || siteKeywords

mixin donatee(d)
  .donatee&attributes(attributes)
    if d.avatar
      img.avatar(src=d.avatar alt=d.name)
    else
      img.avatar(src="avatar.png" alt=d.name)
    .top
      h3.name
        a(href=`/${d.id}/`)= d.name
      if d.twitter
        a.twitter(href=`https://twitter.com/${d.twitter}` target="_blank") Twitter
      if d.github
        a.github(href=`https://github.com/${d.github}` target="_blank") GitHub
    if d.nano_account
      a.cta(href=`https://tools.nanos.cc/?tool=pay&address=${d.nano_account}&amount=&recipient=${d.name.split(' ')[0]}&message=Donation to ${d.name.split(' ')[0]}`)
        = `Give a Nano Donation`
    if d.sponsor_link
      a.cta(href=d.sponsor_link)
        = `Sponsor ${d.name.split(' ')[0]}`
    if d.description
      .description!= renderMarkdown(d.description)
    if d.tags
      .tags
        each tag in d.tags
          a.tag(href=`/tag/${slugify(tag)}`)= tag

mixin donatees(list)
  ul.donatees&attributes(attributes)
    each d in shuffle(list)
      li: +donatee(d)

<!DOCTYPE html>
html(lang="en")
  head
    meta(charset="UTF-8")
    meta(http-equiv="X-UA-Compatible" content="ie=edge")
    meta(name="viewport" content="width=device-width,initial-scale=1")
    meta(name="keywords" content=pageKeywords)
    meta(name="description" content=pageDescription)
    meta(property="twitter:card" content="summary")
    meta(property="twitter:title" content=pageTitle)
    meta(property="twitter:description" content=pageDescription)
    meta(property="twitter:image" content="https://nanodevlist.com/card.png")
    meta(property="og:type" content="website")
    meta(property="og:title" content=pageTitle)
    meta(property="og:url" content=content="https://nanodevlist.com")
    meta(property="og:image" content="https://nanodevlist.com/card.png")
    meta(property="og:description" content=pageDescription)
    meta(property="og:site_name" content="NanoDevList")
    link(rel="apple-touch-icon" sizes="180x180" href="/favicon.png")
    link(rel="icon" type="image/png" sizes="32x32" href="/favicon.png")
    link(rel="icon" type="image/png" sizes="16x16" href="/favicon.png")
    link(rel="stylesheet" href="/index.css")
    title= pageTitle
  body
    header.header
      .wrap
        .inner
          a(href="/")
            img.logo(src="/nano.svg")
          div
            h1= siteTitle
            h2= siteDescription
    main.main
      .wrap
        .intro
          p
            | Below you find people working on the
            = " "
            a(href=nanoUrl) Nano protocol
            = " "
            | or
            = " "
            a(href=projectUrl) related projects
            | .
            | The goal is to increase the visibility of developers accepting donations.
            | If you are currently working on Nano related projects, submit a PR with your info
            = " "
            a(href=editUrl) as seen here
            | .
          p
            | Being listed on this site should not be considered an endorsement. The list order is randomized every visit.

        block main

        script.
          const shuffle = arr => { for (let i = arr.length - 1; i > 0; i--) { const j = Math.floor(Math.random() * i); const temp = arr[i]; arr[i] = arr[j]; arr[j] = temp; }; return arr }
          const lists = document.querySelectorAll('.donatees')
          lists.forEach(list => {
            const donatees = Array.from(list.querySelectorAll('li'))
            list.innerHTML = ""
            shuffle(donatees).forEach(li => list.appendChild(li))
          })

    footer.footer
      .wrap
        p
          | Maintained by
          = " "
          a(href="https://github.com/joohansson") Json
          = " | "
          | Original from
          = " "
          a(href="https://twitter.com/matt_odell") Matt
          = " and "
          a(href="https://twitter.com/dennisreimann") Dennis
          = "."
        p
          | Contribute on
          = " "
          a(href=repoUrl) GitHub
          = " or "
          a(href=editUrl) add yourself to the list
          = "."
